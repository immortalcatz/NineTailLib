buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

repositories {
        maven {
        name "CB's Maven"
        url "http://chickenbones.net/maven"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

version = "0.0.15"
group= "keri.ninetaillib" 
archivesBaseName = "NineTailLib-[1.10.2]"

sourceCompatibility = targetCompatibility = "1.8" 
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.10.2-12.18.3.2185"
    runDir = "run"
    mappings = "snapshot_20161111"
}

dependencies {
    deobfCompile "codechicken:CodeChickenLib:1.10.2-2.5.2.207:deobf"
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    classifier = 'universal'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives deobfJar
    archives srcJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            if (project.hasProperty("local_maven")) {
                repository(url: "file://${local_maven}")
                pom {
                    groupId = project.group
                    version = project.version
                    artifactId = project.archivesBaseName
                    project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description 'NineTailLib'
                        url 'http://github.com/TeamMD5/NineTailLib'
                        scm {
                            url 'http://github.com/TeamMD5/NineTailLib'
                            connection 'scm:git:git@github.com:TeamMD5/NineTailLib.git'
                            developerConnection 'scm:git:git@github.com:TeamMD5/NineTailLib.git'
                        }
                        issueManagement {
                            system 'github'
                            url 'https://github.com/TeamMD5/NineTailLib/issues'
                        }
                        licenses {
                            license {
                                name 'License'
                                url 'https://raw.githubusercontent.com/TeamMD5/NineTailLib/master/LICENSE.txt'
                                distribution 'repo'
                            }
                        }
                        developers {
                            developer {
                                id 'KitsuneAlex'
                                name 'KitsuneAlex'
                                roles { role 'developer' }
                            }
                        }
                    }
                }
            }
        }
    }
}
